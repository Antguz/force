.. _v3:

FORCE v. 3.7.7
--------------

Release: 03.03.2022

* **FORCE L2PS**

  * Some smaller parts of S2 imagery on the left side of the swath were set to nodata.
    This version improves the angle parsing of the Sentinel-2 metadata.
    Thanks to Fabian Thiel for noting this issue.

* **FORCE AUX**

  * ``force-procmask``: small fix when -d is given

  * ``force-synthmix`` in Docker stopped working at some point due to changes in the Docker base image.
    The python shebang was adapted to account for that.
    Thanks to Fabian Thiel for noting this issue.


FORCE v. 3.7.6
--------------

Release: 14.02.2022

* **General**

  * Landsat 9 support has been implemented for Level 2 and Higher Level Processing.
    
    - Level 2: processing a Landsat 9 image is the same as processing Landsat 8
    - Higher Level: a new sensor tag has been added: ``LND09``

* **FORCE HLPS**

  * in ``force-higher-level``, UDF sub-module:
    Fixed a bug that occured when using long time series.
    An integer overflow occured in the indexing variable when copying data from the 
    C arrays to Python objects.

  * in ``force-higher-level``, feature-based sub-modules:
    Fixed a bug that occured when using many features of the same multiband image.
    Before, there was a 1024 character limitation for reading lines from the parameter file.
    This was now increased to 65536 characters.
    Thanks to Jan Hemmerling for reporting this issue.

  * in ``force-higher-level``, TSA sub-module:
    Daniel Scheffler fixed a bug in MSRre-like indices to prevent truncation.

* **FORCE L2PS**

  * added some new plots to ``force-level2-report`` and fixed the issue of "empty" sensors.


* **FORCE L1AS**

  * Stefan Ernst fixed an issue in ``force-level1-csd`` that coordinates were reversed when using vector geometries as AOI.
    Instead of WFS-querying a remote server, a local copy of the MGRS/WRS-2 grids will be downloaded now.

* **FORCE AUX**

  * ``force-procmask`` was changed to Unix-Stype usage.


FORCE v. 3.7.5
--------------

Release: 04.01.2022

* **FORCE HLPS**

  * in force-higher-level, TSA sub-module:
    Added a fix to prevent truncation of the Chlorophyll Index red-edge (Clre) index.
    Thanks to Dirk Pflugmacher for the notification.

  * in force-higher-level, ML sub-module:
    Fixed a bug that resulted in a segfault when using RF classification, but
    not with RF probability output.


FORCE v. 3.7.4
--------------

Release: 12.11.2021

* **FORCE L1AS**

  * Stefan Ernst fixed some issues in force-level1-csd regarding checks for coorindate ranges and quotes.

* **FORCE HLPS**

  * in force-higher-level, all sub-modules:
    Implemented a fix to prevent a segfault when we have many good cluster in the
    spectral adjustment.

* **FORCE AUX**

  * fixed an error in ``force-tile-extent``, which still used the *old* syntax of
    ``force-cube`` in its call.
    Thanks to Fabian Thiel for the notification.


FORCE v. 3.7.3
--------------

Release: 01.11.2021

* **FORCE L2PS**

  * The fix for ESA baseline 4.0 in v. 3.7.2 introduced an issue for old/current processsing baselines.
    This is fixed now, backwards compatibility is given again.
    Thanks to Vincent Schut for noticing.

  * The multi-parameter based resolution merge option caused segfaults in some images.
    This is fixed now, ``RES_MERGE = REGRESSION`` is now safe to use.
    Thanks to J. Antonio Guzmán Q. for reporting this issue.
    In addition, this method lacked multithreading, which is no implemented, too.

* **FORCE HLPS**

  * in force-higher-level, all sub-modules:
    Implemented updates for enhancing the material-specific spectral adjustment.
    Thanks to Daniel Scheffler for discussion, testing and help on porting.


FORCE v. 3.7.2
--------------

Release: 20.10.2021

* **FORCE L2PS**

  * ESA made major changes in their Sentinel-2 products, which will become effective as of October 26, 2021.
    Specifically, ESA introduced additive scaling factors to convert the DNs to TOA reflectance.
    Older FORCE versions will fail!
    Update to FORCE >= 3.7.2!
    Thanks to Vincent Schut and Patrick Griffiths for the heads-up!

* **General changes**

  * Docker containers will only be published to Docker Hub, if working in the original repository.
    This solves failed GitHub Actions for users that have forked the repository.
    Thanks to Florian Katerndahl for implementing a fix!

* **New Program**

  * There is now a new program ``force-cube-init``, which can generate a ``datacube-definition.prj`` file without needing to process Level 2 data.


FORCE v. 3.7.1
--------------

Release: 11.10.2021

* **General changes**

  * Added debug Docker image


* **FORCE WVDB**

  * Added constraints to prevent download attempts of future data.
    Thanks to Florian Katerndahl for noticing and working on this issue.


FORCE v. 3.7.0
--------------

Release: 26.07.2021

* **General changes**

  * Code of Conduct was added.

  * Contribution guidelines were added.

  * Makefile:
    The check for the successful installation has been reworked.
    Thanks to Willi Weber for help on this topic.

  * commandline usage:
    FORCE is progressing towards a stricter usage of Unix-style commandline calls.
    This has been implemented for all programs, some are still outstanding.
    As an example, ``force -v`` prints the version.
    Please adjust your routines if necessary.
    Some new features were introduced by this, too.
    This also solves this `issue <https://github.com/davidfrantz/force/discussions/84>`_ that some users experienced.


* **FORCE L1AS**

  * Added nanoseconds to the temporary folder and metadata generated by force-level1-csd.
    This helps if the program is called from a parallel loop.
    Thanks to Pablo Rodríguez-Sánchez for suggesting this feature.
  
  * force-level1-csd is now aware of the FORCE_CREDENTIALS environment variable

  * Stefan Ernst fixed a bug when ``-n`` was given as first option.

  * Stefan Ernst added an option ``-l``, which checks against logs from *FORCE L2PS*, and only downloads images that weren't processed already.


* **FORCE L2PS**

  * new program: force-level2-report. 
    The new program allows to generate an html report of the Level 2 Processing.

  * fixed an inconsistency in the use of the ``MAX_CLOUD_COVER`` parameters.
    ``MAX_CLOUD_COVER_FRAME`` considered clouds and cloud shadows.
    ``MAX_CLOUD_COVER_TILE`` considered clouds, cloud shadows, and snow.
    The latter caused unexpected results, thus ``MAX_CLOUD_COVER_TILE`` now drops the snow evaluation.
    Thanks to Marco Wolsza for bringing up this issue.

  * force-lut-modis has new options, that specify whether the daily tables and/or climatology should be generated or not.


* **FORCE HLPS**

  * in force-higher-level, ARD submodules:
    Added an additional exit when the date or product of datasets could not have been retrieved.
    This can e.g. happen when users are renaming ARD.
    Thanks to Fabian Lehmann for highlighting this issue.

  * in force-higher-level, all sub-modules:
    Implemented a material-specific spectral adjustment (Scheffler et al. 2020).
    A new parameter ``SPECTRAL_ADJUST`` was added. 
    If TRUE, Landsat reflectance is adjusted to Sentinel-2.
    This also enables usage of Red-Edge indices for Landsat.
    Note that this method increases I/O as all input bands are needed to perform the adjustment.
    Thanks to Daniel Scheffler for discussion and help on porting.

  * in force-higher-level, TSA sub-module: 
    Fixed a coredump that occured when using ``OUTPUT_FB* = FALSE AND OUTPUT_CA* = TRUE``.
    Thanks to Matt Clark for reporting this issue.

  * in force-higher-level, TSA sub-module: 
    Daniel Scheffler added a whole bunch of new red edge indices, see :ref:`tsa-param-index`.

  * in force-higher-level, TSA sub-module: 
    Reworked some aspects of the CAT transformation.
    Thanks to Franz Schug for discussion and testing.

    - Mean and number of observations are also written (instead of nodata) if one segment (total/before/after) had less than 3 observations; all trend parameters remain nodata however.
    - Added a new parameter ``CHANGE_PENALTY`` that puts a penalty on change candidates, where the subsequent index value is high. If this parameter is TRUE, the change is detected as the point in time with maximum (pre - now)*(pre-post).     If FALSE, the change is detected as the point in time with maximum (pre - now); this is the same as before.
    - The offsets are now reported at the beginning of each segment. Before, the offsets were reported at the beginning of the time series, which was especially disadvantagous for the "after change" segment.

  * in force-higher-level, TSA sub-module: 
    Reworked some aspects of the Trend analysis and CAT transformation.

    - Added new layers for the absolute gain, which is the slope * length of the times series.
    - Added new layers for the length of the time series.
    - The relative change (slope * length of time series / offset) is now reported in percent. Also, this layer is 0 if offset <= 0.

  * in force-higher-level, TSA sub-module: 
    Fixed an issue when computing kNDVI.

  * A new submodule is available: ``UDF`` plug-in, enabled by a lot of support by Andreas Rabe.
    This submodule is an extension of the plug-in functionality introduced in v3.6.0.
    Python UDFs can now be simply plugged into FORCE, thus running custom Python code without re-compiling FORCE.
    The ``UDF`` submodule acts on the ARD input type (see :ref:`hl-input`).
    Two types of UDFs are supported:
    
    1) pixel-based UDF: the user only has to write a pixel-function, FORCE takes care of everything else.
    2) block-based UDF: the user has to write a function that receives a block of data. Useful for numpy-stype functions.

    A tutorial is planned to showcase the usage.

  * The usage of the previous UDF functionality within the ``TSA`` submodule was harmonized with the new ``UDF`` submodule.
    You will need to slightly adapt your existing UDF to work with the new version.
    Both UDF types are supported in the ``TSA`` submodule, too.

    A tutorial is planned to showcase the usage.

    There is a new repository that holds a collection of UDFs.
    Users are encouraged to upload their UDFs there for broad user uptake.
    The UDFs are also cloned into the FORCE docker images.
    
  * in force-higher-level, LSM sub-module: 
    
    Franz Schug added two new features. 
    1) The submodule now takes the minimum size of a patch to be considered for metrics calculation as a parameter; new parameter: ``LSM_MIN_PATCHSIZE``. 
    2) force-lsm now offers greater than or equal to (GE) and lower than or equal to (LE) as additional threshold definitions (``LSM_THRESHOLD_TYPE``).

* **FORCE AUX**

  * force-pyramid takes levels and resampling method as additional arguments.

  * force-parameter allows to specify the parameter file name.

  * force-mosaic has new options: output folder relative to the input data (default: ``mosaic``), and number of parallel jobs.

  * force cube thas new options: attribute name for vector data to be burned into the raster; input layername; output nodata; output datatype; output basename; number of parallel jobs.


FORCE v. 3.6.5
--------------

Release: 19.03.2021

* **General changes**

  * GitHub discussions
    GitHub discussions is the new place for discussing and asking for help from the FORCE community.
    The Google group is not used anymore.

* **FORCE L2PS**

  * fixed bug introduced with 3.6.4


FORCE v. 3.6.4
--------------

Release: 17.03.2021

* **General changes**

  * Docker (1/2): 
    FORCE is now built from a base image that contains all the installation (davidfrantz/base_image).
    This makes building and testing way faster.

  * Docker (2/2): 
    Fabian Lehmann considerably reduced the size of the Docker image.


* **FORCE HIGHER LEVEL**

  * in force-higher-level, LSM sub-module: 
    Franz Schug added a new metric: ``ARE``, which yields the pixel area of the foreground class.
    Note: this value is capped at 32767.

  * in force-higher-level, TSA sub-module:
    A segmentation fault occured when using the SAVI Index.
    This is now fixed.
    Thanks for Janos Steiner for reporting this issue.

  * in force-higher-level, TSA sub-module:
    Implemented the new kNDVI following Camps-Valls et al. 2021.
    Use with ``INDEX = kNDVI``.
    Sigma is fixed to 0.5*(NIR+RED).

* **FORCE WVDB**

  * We updated the ready-to-use, global water vapor database. 
    The dataset is comprised of daily global water vapor data for February 2000 to December 2020 for each land-intersecting Worldwide Reference System 2 (WRS-2) scene, as well as a monthly climatology that can be used if no daily value is available. 
    The dataset is freely available at `<https://doi.org/10.5281/zenodo.4468700>`_. 
    This dataset may relieve you of the burden to generate the water vapor database on your own.

* **FORCE L2PS**

  * $BINDIR is now dynamically evaluated on runtime. 
    For users, this should not make a difference.


FORCE v. 3.6.3
--------------

Release: 11.01.2021

* **General changes**

  * Versioned Docker images are now available again.
    Thanks to Fegyi for the hint.

  * A github action was implemented to test whether pushed code compiles and installs successfully.

* **FORCE WVDB**

  * Updated force-lut-modis to work with GDAL 3.2.
    Some subdatasets are not visible anymore since this GDAL version.
    Added some code to make this work again.  
    Thanks to Vincent Schut for suggesting a fix.


FORCE v. 3.6.2
--------------

Release: 04.01.2021

* **General changes**

 * Fixed a linking problem when using python3.8.
   Thanks to Vincent Schut for suggesting a fix.


FORCE v. 3.6.1
--------------

Release: 16.12.2020

* **FORCE L2PS**

 * USGS has sligtly changed the file format of Collection 2 data.

   - Collection 1: *.tar.gz containers
   - Collection 2: *.tar containers
   
   force-level2 now works with containers in tar.gz, tar, and zip format.


FORCE v. 3.6.0
--------------

Release: 10.12.2020

* **General changes**

  * Docker dissemination has changed.
    A GitHub action was implemented, which automatically builds and publishes a Docker image once the main branch was updated.
    Thus, the docker image has changed to **davidfrantz/force**.
    Please use this image from now on.
    A special thank goes to Fegyi, who has initiated the FORCE Docker image and who hosted the image on his account up to this point!

  * :ref:`depend` have changed.
    Instead of python, python3 is now specifically required.
    Also, added python3-dev as dependency (thanks to Willi Weber for the hint).

  * On some systems, FORCE failed to compile due to multiple definitions of _WVLUT_.
    Thanks to Ansgar Lößer for suggesting a fix for this.

  * Fixed the inconsistent use of the synonyms BLOCK_SIZE and CHUNK_SIZE. 
    It is BLOCK_SIZE from now on.
    Thanks to Jonas Ardo for the hint.

* **FORCE LEVEL 1 ARCHIVING SYSTEM**

  * Stefan Ernst fixed some issues in force-csd:

    * Reworked how AOIs in the form of vector files are handled.
      Geopackages are no longer used as database for intersecting user-defined AOIs with the tiles/footprints of Sentinel-2 and Landsat, 
      as the GDAL GPKG driver and SQLite caused issues with certains setups / installations. 
      The geopackage format is still supported as AOI input though.

    * Several small fixes
      Fixes target the reprojection of AOIs, handling of negative values for AOI bounding boxes, command line option parsing, etc.
      Only the Landsat product with the latest processing datestamp is downloaded if there are several products for one WRS-2 footprint on the same day.

* **FORCE L2PS**

  * Changed the BRDF correction strategy.
    Before, the reflectance was fixed to a sun zenith of 45° as suggested by Flood et al. 2013.
    Zhang et al. 2016 demonstrated that this strategy results in global mean absolute differences of the sun zenith greater than the maximum Landsat viewing zenith angle (7.5°).
    Now, the sun zenith is fixed to the latitude-varying local time, which only results in differences of 0.26°.
    We are using the mean local time of Landsat 8 and Sentinel-2 overpass.
    Note that the same change was implemented in the HLS dataset.
    Thanks for David Roy and Hankui Zhang for discussion and guidance on this topic.

  * Changed the behaviour of the cloud shadow flag.
    Before, the cloud shadow flag was not set if the cloud flag (any state) was set.
    Thus, when users wanted to use confident clouds only, i.e. not the buffered clouds, 
    there was a gap between the cloud and the shadow mask.
    This is mitigated now: cloud and cloud shadow flags can be set simultaneously. 
    This also enables "cloud shadow on top of cloud" scenarios.
    Thanks to Haili Hu for reporting this issue.

  * Changed the behaviour of over-saturated surface reflectance over cold cloud tops.
    Before, if surface reflectance > 200%, the pixel was set to nodata.
    Thus, holes in the clouds appeared.
    Now, the pixel is only flagged as saturated, and reflectance is capped at the maximum Int16 value.
    Note that this happens because the assumptions for estimating **surface** reflectance are not valid over clouds.
    Thanks to Philip Frost for reporting this issue.

  * Added a new parameter ``ERASE_CLOUDS``. 
    If this parameter is enabled, confident cloud detections will be erased in the reflectance product, 
    i.e. pixels are set to nodata. 
    The cloud flag in the QAI product will still mark these pixels as clouds. 
    This option may be usefule when disk space is of concern: 
    removing the clouds(when used with compressed output options) will result in smaller file sizes.

  * Some users noted that the cloud buffer is too large for their application.
    This release hands control of the buffer widths to the user.
    New parameters were added to the parameterfile: ``CLOUD_BUFFER``, ``SHADOW_BUFFER``, ``SNOW_BUFFER``.
    The size corresponds to the buffer radius in meters.

* **FORCE Import**

  * new program added: force-import-modis
    A new tool was added, which imports the MODIS Surface Reflectance Daily product MOD09GA/MYD09GA into FORCE.
    The tool generates a FORCE-compatible datacube in Sinusoidal projection; MODIS tile h18v03 is ingested into FORCE tile X0018_Y0003.
    The tool converts the MODIS hdf file into a pair of BOA/QAI images in compressed GeoTiff format according to FORCE data structure and naming convention.
    The BOA product holds the 7 surface reflectance bands (ordered by wavelength).
    The QAI product holds the Reflectance Data State QA, wherein the MODIS quality flags are translated into the usual FORCE quality flags.
    File naming is like this: 20150101_LEVEL2_MOD01_BOA.tif (MOD01 = MODIS Terra, MOD02 = MODIS Aqua).

* **FORCE HIGHER LEVEL**

  * force-higher-level is aware of the newly added MODIS sensors, i.e. MOD01 and MOD02 can be specified in the sensor list (``SENSORS``).
    A new spectral band is available as ``INDEX = SWIR0``, which represents MODIS band 5 (1230 - 1250).

  * in force-higher-level, TSA sub-module: 
    There is a new functionality, which enables users to plug-in their own python code in a very easy and user-friendly way.
    Thus, FORCE can now be complemented by custom user functionality without changing or recompling the C code.
    Two new parameters are now needed in the TSA parameterfile: 

    1) ``FILE_PYTHON`` points to a python file
    2) ``OUTPUT_PYP = TRUE/FALSE`` defines whether to use the script and output the corresponding data

    An example python script can be found in ``force/example/tsi-plugin.py``.
    Do not modify the function names and function arguments.

    A tutorial is planned to showcase the usage.

  * in force-higher-level, TSA sub-module, CAT analysis: 
    Fixed an arithmetic expression bug that occured when computing loss when the regression intercept was 0.

* **FORCE AUX**

  * force-pyramid uses multiprocessing to speed up computation (when multiple input images are given).


FORCE v. 3.5.2
--------------

Release: 05.10.2020

* **FORCE LEVEL 1 ARCHIVING SYSTEM**

  * Stefan Ernst fixed some issues in force-csd.
    Added check for S2 duplicate scenes. 
    Only the scenes with highest processing baseline and latest processing date is downloaded.
    Check for already downloaded S2 scenes does not rely on scene name column anymore, as old GCS folder names don't represent old file naming convention. 
    Scene name for check is extracted from URL now.
    Added check for length of date string.
    Fixed problem with converting filesize of scenes from bytes to megabytes.
    Fixed rounding of reported data volume (no more changing of locale).
    gsutil does not create log files, check for downloaded data is handled by the script only.
    Files are downloaded following chronological order based on acquisition time.
    -k now saves filtered metadata to level1-datapool folder.

* **FORCE AUX**

  * force-parameter now writes the polar-based phenology parameters into the TSA sekeleton.

* **FORCE L2PS**

  * fixed a "cannot copy" bug when using the water vapor database when correcting Landsat data.


FORCE v. 3.5.1
--------------

Release: 17.09.2020

* **Docker changes**

  * Fegyi fixed an issue: files generated through docker were owned by root before.

* **FORCE LEVEL 1 ARCHIVING SYSTEM**

  * Stefan Ernst fixed a small issue with the force-csd progress bar, as well as an issue when the end data wasn't defined.

* **FORCE HIGHER LEVEL**

  * in force-higher-level, TSA sub-module, CAT analysis: 
    There is another change parameter: loss = change / offset * 1000. 
    The offset is the regression intercept of the linear trend applied to the full time series.


FORCE v. 3.5.0
--------------

Release: 15.09.2020


* **General changes**

  * GDAL >= 3.0 support:

    Since GDAL >= 3.0, the coordinates from coordinate transformation operations are no longer sorted as X/Y or LON/LAT, but in the typical order of each coordinate system.
    This has caused an incompatibility of FORCE with GDAL >= 3.
    This is fixed now. Still, do not use FORCE < 3.5 with GDAL >= 3. Update FORCE instead.

  * Fixed a small bug that prevented program execution when the parameterfile was too long.

  * FORCE programs will now transition to a Unix-typical usage, where non-mandatory options are specified with -o or --long-option.
    This will happen from time to time in the next releases. 
    The new program force-level1-csd is a prototype for this.

  * Reduced the amount of compiler warnings when compiling with gcc 9.3.0 under Ubuntu 20.40 LTS.
    This is ongoing work. The goal is to get rid of all warnings (they are not critical, though).

* **FORCE LEVEL 1 ARCHIVING SYSTEM**

  * new program force-level1-csd:

    The new force-csd tool (cloud storage download) was kindly contributed by Stefan Ernst.
    This tool goes way beyond the capabilities of the former sensor-specific scripts force-level1-landsat and force-level1-sentinel2.
    It downloads Sentinel-2 AND Landsat data from the Google Cloud Storage.
    You need the gutils python package, and you might need an account on Google's end. 
    This is currently free. After communicating with Google, we expect this to remain free in the future.
    force-csd is very efficient, you can use parallel downloads. 
    You can filter the datapool w.r.t. sensor, date, cloud cover, tier level etc. 
    The area of interest can be specified in a variety of ways, e.g. coordinate string as in force-level1-sentinel2, but a list of WRS-2/MGRS scenes, or vector geometries (e.g. shapefile) are also supported.
    Of course, it also takes care about the file queues needed for Level 2 Processing.

  * deprecated programs: force-level1-landsat and force-level1-sentinel2:

    Due to the superiority of force-level1-csd, force-level1-landsat and force-level1-sentinel2 are now deprecated.
    They will remain in the repo for a while, but will only receive minimal support in the future. 
    Users are encouraged to change their workflow accordingly.

* **FORCE HIGHER LEVEL**

  * in force-higher-level, Level 3 sub-module: 
  
    Included a safety query, which ensures that at least one score should be > 0.
    Setting all scores to 0 resulted in some crashes.
    Thanks to Jonas Ardö to report on this.

  * in force-higher-level, TSA sub-module: 

    A new suite of metrics was implemented: Land Surface Phenology descriptors based on a polar transformation, Polarmetrics it is.
    This is based on the paper by Bjorn-Gustaf J. Brooks: https://www.mdpi.com/1999-4907/11/6/606, but was modified (e.g. to consider interannual shifts in the start of the phenological year) and complemented by many more metrics.
    A couple of new parameters are now necessary, force-parameter has been updated to include these in the skeleton.
    See :ref:`tsa-param-polar`.

  * in force-higher-level, TSA sub-module: 
  
    The domain tag of the bandwise FORCE metadata domain was updated to be interoperable with a 4D data model (see force-stack below).

  * in force-higher-level, TSA sub-module: 

    When folding the time series, the quantile statistics were broken with a memory error.
    This is fixed now. Thanks for Christoph Raab and Benjamin Jakimow for reporting this.

  * in force-higher-level, TSA sub-module, trend and CAT analyses: 

    Added a new band to for computing relative change, i.e. gain/loss relative to initial value: (slope*timesteps)/offset. 
    This makes most sense when the index has a physical meaning like fractional cover. 
    This does not make sense at all when offset is negative! Take care.

  * in force-higher-level, TSA sub-module, trend and CAT analyses: 

    fixed an issue that compromised signifance levels for trends, which were computed on DOY-based phenometrics.

* **FORCE AUX**

  * in force-mosaic:

    force-mosaic now copies all metadata to the generated mosaics.
    For this, the new aux tool force-mdcp is used

  * new program force-mdcp:
  
    This new helper tool copies metadata from one file to another.
    This included the FORCE metadata domains.
    This program is now used by force-mosaic to carry the metadata to the generated mosaics.

  * new program force-stack:

    This new tool stacks files in VRT format.
    This works with physical images (e.g. GeoTiffs), as well as VRT files (as e.g. generated by force-mosaic).
    A variable number of input files can be stacked, wildcards are supported.
    Most basically, this is e.g. useful to look at RGB combinations in QGIS, where RGB visualizations cannot be used when the channels are not in the same file.
    If the number of bands in the input files is different, the images are stacked after another, e.g. file 1 band 1, file 1 band 2, file 2 band 1.
    If the number of bands in the input files is the same, the images are stacked with band interleave, e.g. file 1 band 1, file 2 band 1, file 1 band 2, file 2 band 2.
    The second option implements a 4D data model (think of time series), which is consistent with the QGIS plugins Raster Time Series Manager and Raster Data Plotting (C) Andreas Rabe.
    A tutorial is in development to illustrate the interoperable use between FORCE and said QGIS plugins.

  * in force-magic-parameters:

    The user can now change between "all combinations" or "paired combinations".
    Please refer to the program description:
    https://force-eo.readthedocs.io/en/latest/components/auxilliary/magic-parameters.htm


FORCE v. 3.4.0
--------------

Release: 03.08.2020


* **General changes**

  * FORCE no longer uses the terms white-list, master, and slave.
    These were replaced (in code and docs) with allow-list, base, and target.

  * Bandnames were added to all output products.

* **Changes for Docker**

  * In Docker, retrieving the user credentials was problematic, i.e. the user/password for ``force-level2-sentinel2`` and ``force-lut-modis``.
    We have now solved it by adding an environment variable.
    These two programs will look for an environment variable ``FORCE_CREDENTIALS``, which the Docker user can specify with s.th. like this: 

    .. code-block:: bash

       docker run --env FORCE_CREDENTIALS=/app/credentials fegyi001/force env
    
    In this directory, you should place the ``.scihub`` and ``.laads`` files.
    
    If the environment variable is not set, FORCE will look in the user's home directory (as before).
    Thus, for non-Docker users, nothing changes (although you can choose the environment variable, too).

    Thanks to Haili Hu and Gergely Padányi-Gulyás for developing this solution.
    
* **FORCE L2PS**

  * Due to the ban of the term "master", the ``DIR_MASTER`` and ``MASTER_NODATA`` tags have changed to ``DIR_COREG_BASE`` and ``COREG_BASE_NODATA``.

* **FORCE HIGHER LEVEL**

  * added new sub-module to force-higher-level:
  
    library-completeness LIB. 
    This submodule takes a feature table (e.g. spectral library used for training a machine learning classifier), and tests each feature vector against the image features.
    The output is a minimum MAE map, which indicates if your library is complete - or if there are e.g. landcovers that you do not have any samples for (likely your classification/regression will be worse there).
    It is suggested to not use this sub-module on the native spatial resolution, but on 100m or similar.
    force-parameter has a new option to generate a LIB parameter file.
    Thanks to Franz Schug for prototyping this method.

  * in force-higher-level, most sub-modules: 
  
    Added a new parameter ``OUTPUT_EXPLODE``.
    If FALSE, multi-band images are written (as before).
    If TRUE, the output is exploded into single-band images.
    Note that this can result in an extremely large number of files.

  * in force-higher-level, various sub-modules: 
  
    Explicitly added the nodata value for output products, which formerly caused strange behaviour when there only was nodata within the processing mask of one block.
    Thanks to Stefan Ernst for reporting this issue.

  * in force-higher-level, sampling sub-module: 
  
    The limitation of only having one response variable was lifted.
    Accordingly, the input table can have more than 3 columns, i.e. 1) X-, 2) Y-coordinates, and 3+) response variables.
    The output response file will hold all response variables.
    Some improvements were made w.r.t. performance, i.e. the input table is only read once, and a "we-already-have-sampled-this-coordinate" is used to skip finished samples.

  * in force-higher-level, CSO sub-module: 
  
    Fixed a critical memory error related to the CSO nodata value.

  * in force-higher-level, machine learning sub-module, random forest classification:
  
    Random Forest class probabilities can now be output. 
    The Random Forest classification margin can now be output.
    Two new parameters were added: ``OUTPUT_RFP`` & ``OUTPUT_RFM``.
    Thanks to Benjamin Jakimow for suggesting this improvement.
    
  * in force-higher-level, machine learning sub-module:
  
    Added a check if all provided models do exist.
    Thanks to Stefan Ernst for reporting this bug.
  
    
  * in force-higher-level, TSA sub-module: 
  
    Added additional spectral indices: Normalized Difference Tillage Index, and Normalized Difference Moisture Index
    Thanks to Benjamin Jakimow for suggesting this improvement.

  * in force-higher-level, TSA sub-module: 

    Fixed a bug in the outlier detection, which caused some unexpected behaviour when multiple snowy observations were ommitted in the L2 QAI screening

* **FORCE AUX**

  * new program force-synthmix:
  
    Andreas Rabe has provided a SynthMix program!
    SynthMix can be used to generate training data for machine learning regression to map sub-pixel fractions of land cover, tree cover etc.
    SynthMix is a very elegant method to create a proper training dataset, makes it much easier to generate training data for fractional cover, and needs very few input data (as opposed to traditional methods).
    For details, see. `Okujeni et al. "Support vector regression and synthetically mixed training data for quantifying urban land cover." Remote Sensing of Environment 137 (2013): 184-197. <https://www.sciencedirect.com/science/article/pii/S0034425713002009>`_. 
    For a ecent example, see `Schug et al. "Mapping urban-rural gradients of settlements and vegetation at national scale using Sentinel-2 spectral-temporal metrics and regression-based unmixing with synthetic training data." Remote Sensing of Environment 246 (2020): 111810 <https://www.sciencedirect.com/science/article/pii/S0034425720301802>`_
    force-parameter has a new option to generate a SynthMix parameter file.

  * new program force-procmask:
  
    This program can generate processing masks from cubed, continuous input images, e.g. to generate a mask with all pixels that have NDVI > 0.8
  
  * new program force-tile-extent:
  
    This program takes a polygon vector file (e.g. shapefile of a country), and suggests a processing extent for higher-level processing (``X_TILE_RANGE`` & ``Y_TILE_RANGE``)
    It further gives a recommendation whether you should use a tile allow-list.
    This list is also generated.

  * new program force-magic-parameters:

    This program lets you define multiple replacement vectors in any FORCE parameterfile.
    When executing this program, the vectors are combined with each other, and multiple new parameterfiles are generated.

  * in force-train:

    The response file can now have multiple columns, i.e. different variables.
    A new tag ``RESPONSE_VARIABLE`` is used to select the variable, which should be used for training the model.
    See :ref:`train-param`.

  * in force-train:

    introduced new parameter ``FEATURE_WEIGHTS``, which allows to use à priori class weights for Random Forest and Support Vector Machine classification.
    See :ref:`train-param`.

  * in force-cube:
  
    If a resulting image is completely nodata, it will automatically be removed.
    
  * in force-mosaic:
  
    Mosaicking is now performed in parallel.


FORCE v. 3.3.0
--------------

Release: 24.06.2020

* **FORCE WVDB**

  * Fixed a critical bug in force-lut-modis.
  
    An incorrect array index was used causing a memory error.
    Thanks to Hailu Hu for the bugfix.

* **FORCE AUX**

  * In force-train: 
  
    added a small fix that enables compilation with OpenCV-3.4.1 under CentOS-8 as suggested by github user kemnitzs.


FORCE v. 3.2.1
--------------

Release: 14.04.2020

* **FORCE HIGHER LEVEL**

  * in force-higher-level: 
  
    fixed a small issue when the processing mask included nodata values.


FORCE v. 3.2.0
--------------

Release: 08.04.2020

* **FORCE HIGHER LEVEL**

  * in force-higher-level, Continuous Field ImproPhe sub-module: 
  
    included a safety check when attempting to predict a year outside of the DATE_RANGE. Before, this caused a memory error.

  * in force-higher-level, both ImproPhe sub-modules: 
  
    fixed a critical bug when no valid high-res pixel was found in a processing block.


FORCE v. 3.1.1
--------------

Release: 26.03.2020

* **General changes**

  * Added a small bash script to increase the version number.

* **FORCE HIGHER LEVEL**

  * in force-higher-level: 
  
    fixed a small issue that prevented outlier detection if we have a very low data availability.


FORCE v. 3.1.0
--------------

Release: 19.03.2020

* **General changes**

  * Added a small bash script to compile with/without SPLITS.

  * Added a small bash script to compile in debug/production mode.

  * Updated the Makefile with the standard CURL path for both Ubuntu 16.04 LTS and 18.04 LTS.

* **Docker support**

  * Gergely Padányi-Gulyás has contributed a Docker image!
    See :ref:`docker` for details.

* **FORCE L2PS**

  * Fixed a bug when reading Landsat 7 metadata.
    Thanks to Gergely Padányi-Gulyás for reporting this.
    
  * Fixed a cosmetic issue, where a mkdir warning was displayed for existing directories.

* **FORCE HIGHER LEVEL**

  * in force-higher-level, TSA sub-module, phenometrics:
  
    Added safety checks for ``LSP_DOY_PREV_YEAR`` and ``LSP_DOY_NEXT_YEAR`` in relation to the interpolation step ``INT_DAY`` and the hemisphere switch ``LSP_HEMISPHERE ``.
    Before, a critical memory error was possible.
    
  * in force-higher-level, TSA sub-module, phenometrics:
  
    Fixed an incorrect index that could cause a memory error.
  
  * in force-higher-level, TSA sub-module, phenometrics:
  
    Allowed negative integrals, e.g. when ``INDEX`` is Tasseled Cap Wetness or radar backscatter.

  * in force-higher-level, TSA sub-module, phenometrics:
  
    Allowed negative ``LSP_MIN_VALUE``. e.g. when ``INDEX`` is Tasseled Cap Wetness or radar backscatter.


FORCE v. 3.0.1
--------------

Release: 12.03.2020

* **FORCE HIGHER LEVEL**

  * in force-higher-level:
  
    fixed GDAL PAM warning messages.
    
  * in force-higher-level:
  
    fixed nodata warning messages when no processing mask is available in block.


FORCE v. 3.0
------------

Release: 09.03.2020

* **General changes and announcements**

  * FORCE v. 3.0 is a major update.
    A lot of modules have received a major code overhaul.
    Much of this is not visible, but internally, code was extensively restructured, simplified, modularized, and optimized.

  * The official FORCE paper was published in Remote Sensing.
    The paper describes FORCE and its underlying principles.
    Frantz 2019: https://doi.org/10.3390/rs11091124

  * The code has been moved to GitHub.
    A self-registration is no longer necessary.
    https://github.com/davidfrantz/force

  * The documentation was transformed to an online documentation:
    https://force-eo.readthedocs.io/

  * FORCE Tutorials are now available! Make sure to regularly check for new content:
    https://davidfrantz.github.io/#tutorials

  * An open Google self-help group was set up.
    FORCE users, please participate, and help others.
    Together, we can move EO research forward.
    https://groups.google.com/d/forum/force_eo

  * FORCE has continued to participate in the ACIX II and CMIX intercomparisons (Atmosperic Correction / Cloud Masking Intercomparison eXercises).
    The preliminary results look very good, FORCE is a very reliable software framework and produces high quality products.


* **Deprecated programs**

  * Due to restructuring, many FORCE programs were removed, but their functionality was integrated and synergised in fewer programs to unify usage and simplify code maintenance and reduce redundancy.

  * force-level3, force-tsa, force-cso, force-improphe, force-l2imp are now available as submodules in force-higher-level.

  * force-parameter-level2, force-parameter-level3, force-parameter-tsa, force-parameter-cso, force-parameter-improphe, force-parameter-l2imp are now available as submodules in force-parameter

  * force-quicklook-level2, force-quicklook-level3 were removed as support for building quicklooks was directly integrated into the respective processing systems.

  * force-level1-sentinel2-long was deprecated for good.
    Sentinel-2 images with the outdated, long naming convention are no longer available.
    As such, this variant of force-level1-sentinel2 is no longer needed.


* **New programs**

  * Some new programs are introduced with v. 3.0, which either complement new functionality or integrate several deprecated solo programs.

  * force-cube is a tool to convert any image into datacube format.
    force-cube warps the image to the target projection, and tiles the data according to the grid system in use.
    Various resampling options can be used.
    It is key that a nodata value is given for the input images.
    force-cube can also warp, rasterize, and tile shapefiles.
    If used with shapefiles, masks (1 = occurence of geometry, 0 = no geometry) are generated, which can be used in force-higher-level to speed up analyses.
    
  * force-pyramid generates DEFLATE compressed overview images for speedy visualization (levels 2 4 8 16).
    It works well in combination with force-mosaic to generate pyramids for VRT mosaics.

  * force-parameter generates parameter file skeletons for each FORCE module.
    The skeletons also contain more in depth descriptions for each parameter, and supported parameter values/ranges.
    The descriptions can be turned off to generate more compact parameter files.
    This program fully substitutes the various force-parameter-* programs.

  * force-higher-level fully substitutes the deprecated higher level tools force-level3, force-tsa, force-cso, force-improphe, and force-l2imp.
    It provides a unified user interface for all higher level functionality, and provides a general framework for processing the Level 2 ARD products, e.g. the looping over the tiles is handled herein.
    Several new submodules (machine learning, texture, landscape metrics, and sampling) were implemented.

  * force-train allows to train (and validate) machine learning models using tables with features, and response variable, respectively.
    Features may be extracted from any FORCE-derived or compatible data source using the new sampling module in the new force-higher-level program (or any other program).
    Support Vector Machine and Random Forest models can be used, both as classification or regression.
    The samples can be split into training and validation sets.
    The trained models can be used in force-higher-level to apply the prediction to large datasets.


* **New dependencies**

  * The OpenCV library is now a mandatory dependency for the higher-level FORCE functionality.
    OpenCV is used for the newly introduced machine learning and texture functionality.


* **CITEME**

  * In order to increase fair usage, increase acceptance from external developers to integrate their code in FORCE, and to guide users on what references to cite, each FORCE module now generates a "CITEME" file with suggestions for references to be cited.
    This list is based on the specific parameterization you are using.


* **FORCE L1AS**

  * A 'dry-run' option was added to force-level1-sentinel2, which only checks how much data (number and volume) would be downloaded with the parameters you provided.
    No image will be downloaded.

  * In September 2018, ESA has activated the Long Term Archive (LTA) to roll out old (and potentially infrequently used) data products from the online storage system to offline storage.
    LTA-support was added to force-level1-sentinel2 (previous versions crash when encountering LTA images).
    However, please note that the data retrieval happens at any time within 24h, and the products stay online for 3 days.
    If a pull request was issued by force-level1-sentinel2, the program will go on to the next image.
    The program needs to be started again after a while to retrieve the potentially restored image.
    Also note, a user quota is implemented to prevent users from pulling the entire archive unfortunately this quota is ridicously low, 1 request per hour and user...
    Hopefully, this will change in the future.

  * force-level1-sentinel2-long was deprecated; see section 'deprecated programs'


* **FORCE AUX**

  * force-tabulate-grid can now generate the grid as ESRI shapefile or in KML format.
    This is controlled by an additional parameter, which is either set to shp or kml.


* **FORCE L2PS**

  * force-parameter-level2 was deprecated, and substituted with the new force-parameter (see new programs section).

  * Performance and portability to different infrastructures was impoved.
    The RAM requirements were lowered substantially from about 13GB for a full Sentinel-2 image to about 8GB while approximately staying at the same runtime.
    Partial images now only use partial RAM, e.g. a Sentinel image with half nodata only uses half the RAM.
    It is now possible to use hybrid parallelization.
    The main parallelization strategy is still multiprocessing, i.e. single images are preprocessed simultaneously.
    New is: each process can additionally use multithreading.
    As multiprocessing is more efficient than multithreading (due to the sequential nature of the Level 2 workflow with different parts being more suitable for multithreading), we recommend to use as many processes, and as few threads as possible.
    However, a mild mix may be beneficial, e.g. 2 threads / process.
    If processing only a few (or one) image, or if RAM is too small, increase the multithreading ratio accordingly.
    This can speed up the work significantly.

  * Parallelization parameters are now specified in the parameter file, even those only used by the batch processor force-level2.
    
    * NPROC for the number of parallel processes.
      As before, NPROC can be adjusted during runtime.

    * NTHREAD for the number of threads each process may use.
      Overall, you are using NPROC*NTHREAD cores.

    * Before starting a new process, DELAY seconds are waited (use this if I/O jams occur).
    
    * PARALLEL_READS controls whether the individual bands of the Level 1 input images are read sequentially or in parallel.
      Note that we have observed two kinds of GDAL installation:
      
      1) The JPEG driver reads each band sequentially, but each image with as many threads as there are available. 
         If this is the case, it is strongly recommended to disable PARALLEL_READS (for Sentinel-2).
      
      2) The GDAL JPEG drived does not do anything in parallel. In this case, use PARALLEL_READ to speed up the work (also use it for Landsat).

    * TIMEOUT_ZIP sets a timeout for unpacking zip/tar.gz input images (if they are still zipped).
    
      This parameter was implemented as on some platforms the Level 1 data are sitting on tape, and retrieving from tape occasionally take longer than the system can tolerate.
      As a result, the unzip/tar commands might hang.
      Timeout kills the job if it didn't finish in the given time.
     
    * Following table indicates whether this option is used:

      +----------------+--------------+------------+
      + Parameter      + force-level2 + force-l2ps +
      +================+==============+============+
      + NPROC          + X            + -          +
      +----------------+--------------+------------+
      + NTHREAD        + X            + X          +
      +----------------+--------------+------------+
      + DELAY          + X            + -          +
      +----------------+--------------+------------+
      + PARALLEL_READS + X            + X          +
      +----------------+--------------+------------+
      + TIMEOUT_ZIP    + X            + -          +
      +----------------+--------------+------------+
    
  * Sentinel-2 data with the old, long naming convention are completely gone from ESA archives.
    For the file queue, and for force-l2ps, it was necessary to give the file path to the granule within the Sentinel-2 product (because there were several granules).
    For the sake of usability, it is now possible to only give the filepath of the top directory, i.e. the \*.SAFE directory.
    For force-level2, it is also possible to give the zipfile; force-l2ps needs the extracted file however.
    Note: if you give the top directory, but the image follows the outdated file structure, only the first granule will be processed.
    For the sake of backward compatibility, it is still possible to give the filepath of the granule.

  * We encountered an issue with the JP2ECW driver when reading Sentinel-2 images.
    The driver performed some kind of high-pass filtering and thus sharpened the image (while reading).
    However, this destroyed radiometry to a degree that the resulting surface reflectance was very unreliable (often negative reflectance).
    FORCE v. 3.0 removes JP2ECW from the list of potential drivers to open Sentinel-2 images.

  * To clarify that the coud masks are included in the QAI quality bit product, the cloud distance product CLD was renamed to DST.
    The cloud distance is not the cloud mask.

  * Cloud masking was improved.
    For cirrus masking, the elevation-dependent equation from Baetens et al.: https://doi.org/10.3390/rs11040433 was implemented.
    
  * Cloud shadow matching was accelerated by improving on the FIFO queue for the flood-fill algorithm (circular buffer instead of step-wise allocations).
    Cloud shadow matching was accelerated by (1) only using pixels in 30m steps (was 2 pixels for Sentinel-2), and (2) by increasing the step size for the base height iteration to a height that coincides with a horizontal shift of 50m (was 2 pixels).

  * Cloud masking-related QAI flags are not mutually exclusive anymore.
    E.g. it is now possible to have both the cloud and snow flags on.

  * The SUN_VIEW_GRID parameter that specifies how large the coarse resolution grid cells for atmospheric modeling are, was removed from the parameter file.
    It was fixed to 5km, which already was the default value, and which already was the constant used for Sentinel-2.

  * The AOD estimation in mountains was improved.
    Before, AOD was often too high, and thus negative reflectance was pretty common.
    This was due to a fixed parameter in equations that scale the AOD with altitude.
    Now, the scaling parameter is estimated from the image, and AOD overestimations are reduced.

  * The AOD averaging for the 5km coarse grid cells was changed.
    Before, the AOD-from-vegetation map, and the AOD-from-water map were averaged.
    Now, the map is generated by averaging each AOD estimate from each target.

  * The logfile logs cloud cover, snow cover, data cover (new), and water cover (new) for each image.

  * A coregistration module was implemented in FORCE L2PS.
    It was implemented to improve the georegistration of Sentinel-2 images, see Rufin et al.: DOI-TO-COME.
    For this purpose, the LSReg algorithm developed by Yan et al.: https://doi.org/10.3390/rs8060520 was integrated into FORCE (thanks Lin for the support).
    When using this option, FORCE expects a NIR master image that covers the complete image(s) to be processed.
    The image can be a mosaic in vrt format or any other format that is readable by GDAL.
    The projection of the master mosaic can be freely chosen, it does not need to be in the same projection as the processed images.
    FORCE expects that the master image has 12 bands, one for each month of the year.
    We have found, that using multi-annual monthly average amages are suitable images for a succesful coregistration.
    FORCE expects that the first five digits of the master image are 'YYYY-'.
    Multiple master images can be generated for different years.
    If there are master images '2015-*' and '2020-*', the first image is chosen when processing a 2017 image; the 2nd one is chosen when processing a 2020 image.
    For details about this strategy, see Rufin et al.: DOI-TO-COME.
    If the coregistration was unsuccesful, processing of the image is aborted.
    Information about the coregistration (# of tie points, corrected shift etc.) and its success are written to the logfile.
    DIR_MASTER specifies the directory that contain the master mosaics.
    If DIR_MASTER = NULL, no coregistration is performed.
    MASTER_NODATA gives the nodata value of the master image.

  * The primary processing unit of the higher level processing system has changed from tiles to blocks.
    Accordingly, ARD output is structured in blocks.
    The blocks are horizontal strips, i.e. they are tile-wide, and as high as specified with BLOCK_SIZE.
    The data cube definition file (output of L2PS) has a new line, which holds the BLOCK_SIZE.

  * RGB quicklooks can be generated as regular output (OUTPUT_OVV parameter).
    The quicklook is a jpeg overview with RGB image, and highlighted quality information.

    +---------------------+----------+
    + cirrus              + red      +
    +=====================+==========+
    + cirrus              + red      +
    +---------------------+----------+
    + opaque cloud        + pink     +
    +---------------------+----------+
    + cloud shadow        + cyan     +
    +---------------------+----------+
    + snow                + yellow   +
    +---------------------+----------+
    + saturated pixels    + orange   +
    +---------------------+----------+
    + subzero reflectance + greenish +
    +---------------------+----------+

  * The PROJECTION tag and the WKT string should be given in one line now!
    In previous version, they needed to be given in two lines due to the parsing code employed.

  * There are two pre-defined projection/grid systems available.
    The EQUI7 grid is a set of 7 continental equi-distant projections and 100km tiles.
    The GLANCE7 grid is a set of 7 continental equal-area projections and 150km tiles.
    If one of these options is used in PROJECTION, the values given in ORIGIN_LAT/ORIGIN_LON/TILE_SIZE/BLOCK_SIZE are ignored and internally overwritten with the respective definition.

  * EQUI7 or GLANCE7 may also be used for a single continent.
    The default behaviour is: if the image intersects with one of the continental grids, it is processed and output into the continental datacube; this is repeated for each of the 7 continents.
    If you only want to have data for one continent, you can use one of the following subprojections: EQUI7-AF, EQUI7-AN, EQUI7-AS, EQUI7-EU, EQUI7-NA, EQUI7-OC, EQUI7-SA.
    For GLANCE7, it works analogously.

  * Instead of RESOLUTION, the parameters RESOLUTION_LANDSAT and RESOLUTION_SENTINEL2 are now available.
    With this change, it is now possible to use one and the same parameter file for both sensors.

  * In Sentinel-2 images, the metadata with the solar and viewing angle do not exactly align with the image data at the Eastern edge of the swath.
    In former FORCE versions, this resulted in a coarse stair-effect (5km) at the left side of the image, i.e. a few pixels at the edge of the swath were missing.
    With the help of some extrapolation, this issue is resolved with FORCE v. 3.0

  * The nodata value for the DEM can now be specified (DEM_NODATA).
    If you are using 0, a warning will be displayed as this is a bad choice for DEM nodata.

  * The new parameter DIR_LOG defines where to store the logfiles; before it was in DIR_LEVEL2 next to the image output.

  * IMPULSE_NOISE detection for the older 8-bit input data (L5/L7) can be switched off.
    
  * In previous Landsat products, the pixels next to nodata pixels were somehow contaminated, probably due to not considering nodata values during resampling.
    BUFFER_NODATA controls whether nodata pixels should be buffered by 1 pixel or not.


* **FORCE WVDB**

  * The LAADS HTTP has introduced to request an authentification.
    Thus, you need to obtain an App Key, see here:
    https://ladsweb.modaps.eosdis.nasa.gov/tools-and-services/data-download-scripts/#requesting This key needs to be stored in a file .laads in your home directoy.


* **FORCE HIGHER LEVEL**

  * force-parameter-level3, force-parameter-tsa, force-parameter-cso, force-parameter-improphe, force-parameter-l2imp were deprecated, and substituted with the new force-parameter (see new programs section).

  * force-level3, force-tsa, force-cso, force-improphe, force-l2imp are now available as submodules in force-higher-level.
    force-higher-level integrates all the higher level functionality in one program, and provides a general framework for processing the Level 2 ARD products, e.g. the looping over the tiles is handled herein.
    The different submodules do still exist, and the parameter files specify which submodule will be executed by force-higher-level.

  * There is now more flexibility with different hardware, especially the amount of RAM necessary.
    Before, the processing was tile-based, which means that the tiles were processed sequentially.
    The primary processing unit has changed from tiles to blocks.
    Accordingly, ARD output is structured in blocks.
    The blocks are horizontal strips, i.e. they are tile-wide, and as high as specified with BLOCK_SIZE.
    The data cube definition files have a new line, which holds the BLOCK_SIZE.
    Tiles are still processed sequentially, but within each tile, the blocks are now processed sequentially.
    A block needs far less RAM than a complete tile, especially with long time series and/or high spatial resolution.
    If the default block size is still too large for your system, you can override BLOCK_SIZE with a smaller value.

  * A considerable performance boost has been gained by preloading data (as e.g. Youtube does).
    Due to the sequential processing of tiles or blocks and the parallelization on the pixel level, the general data access pattern was 
    
    | (1) read all necessary data for the tile/block, 
    | (2) process the data, 
    | (3) output the results.
    |     repeat 1)-3) for each processing unit (tile/block).

    This resulted in ressource underutilisation as especially 1) and 3) are I/O bound with very little CPU usage, whereas 2) is CPU-heavy with no I/O load.

    Since v. 3.0, three teams of threads are used to break these read/process/write cycles, i.e. 
    
    | (Team 1) reads data for the next processing unit (PU+1) 
    | (Team 2) processes the data from the current processing unit (PU) 
    | (Team 3) output the results from the last processing unit (PU-1)
    | (Teams 1-3) do this simultaneously.
    
    Thus, if processing time is larger than reading and writing time, there is no CPU underutilisation.

    Each team can have multiple subthreads.
    NTHREAD_READ controls how many images are read parallely, NTHREAD_COMPUTE controls how many threads are used to do the per-pixel parallelisation of processing, NTHREAD_WRITE controls how many products are written parallely.
    force-higher-level tracks how much time is spent for reading, computing and writing (I/C/O).
    During runtime, this indicates whether your task is Read-, CPU-, or Write-bound.
    A summary of the time saved by streaming is displayed upon completion of the task.

  * There are two kinds of higher level submodules, which mainly differ in the type of data that is used 
    
    1) Level 2/3 ARD products, i.e. time and sensor-stamped inputs 
    
    2) features, i.e. virtually any image data without timeor sensor context (e.g. data used for machine learning predictions; often output from other higher-level modules, or external data like climate variables see also force-cube)
    

  * For the ARD input, the filenames of the output products are inferred from the parameterization for the ARD input.
    For feature input, a basename needs to be defined in the parameterfile.

  * Input data must have one of these file extensions:
    Unexpected files, e.g. \*.ovr etc do not cause errors anymore.
    
    +-----------+----------------------------+
    + extension + format                     +
    +===========+============================+
    + dat       + uncompressed binary (ENVI) +
    +-----------+----------------------------+
    + bsq       + uncompressed binary (ENVI) +
    +-----------+----------------------------+
    + bil       + uncompressed binary (ENVI) +
    +-----------+----------------------------+
    + tif       + GeoTiff                    +
    +-----------+----------------------------+
    + vrt       + GDAL Virtual Format        +
    +-----------+----------------------------+
    

  * Analysis masks are now specified using their directory (DIR_MASK, should contain masks, and their basename (BASE_MASK).

  * The Higher Level Processing System is able to process Best Available Pixel composites as input images (instead or in addition to Level 2).
    To make this work, both the BAP and INF products need to be present (both are output products of the Level 3 submodule), and you need to use the SENSOR as it appears in the filename of these products.

  * The Higher Level Processing System is able to process Sentinel-1 SAR data! 
    You can perform all available time series analyses, Spectral Temporal Metrics, compositing etc. as if it would be a spectral index from optical data.
    Please note however that there is no FORCE module implemented to preprocess the SAR data (any volunteers to integrate this?).
    The S1 data need to be prepared in a FORCE-compatible format: they need to be in the correct tiling scheme (see e.g. force-cube).
    The images need to be signed 16bit integers with scaled backscatter in the order of -1000s, nodata value needs to be -9999.
    The data need to have two bands:
    
    +------+--------------+
    + Band + Polarization +
    +======+==============+
    # 1    + VV           +
    +------+--------------+
    # 2    + VH           +
    +------+--------------+
    
    Four new "sensors" (like LND08 or SEN2A) have been introduced, i.e.
    
    +--------+---------------------------+
    + SENSOR + Description               +
    +========+===========================+
    + S1AIA  + Sentinel-1A IW Ascending  +
    +--------+---------------------------+
    + S1AID  + Sentinel-1A IW Descending +
    +--------+---------------------------+
    + S1BIA  + Sentinel-1B IW Ascending  +
    +--------+---------------------------+
    + S1BID  + Sentinel-1B IW Descending +
    +--------+---------------------------+
    
    This allows to merge (or keep them separated) data from ascending and descending orbits, and from S1A and S1B.
    Data needs to be named like this: 20180108_LEVEL2_S1AIA_SIG.tif

  * Parameters that indicate ranges were changed.
    E.g. X_TILE_MIN, and X_TILE_MAX were consolidated in X_TILE_RANGE.

  * For the ARD input type, the time range is now specified in a consolidated way across submodules.
    The DATE_RANGE parameter (YYYY-MM-DD) specifies the general slice of the time series used for the analysis.
    The DOY_RANGE parameter acts as filter on DATE_RANGE to limit processing to a seasonal rangem e.g. to only use summer images.
    DOY_RANGE can extend over the years for winter seasons/Southern hemisphere.

  * For the Time Series Analysis module, multiple indices can be selected at once, and the processing will generate all available output data for each index.
    While this is very handy, please keep in mind that depending on parameterization you can potentially generate an absurd amount of results and quickly fill up disc space.
    Fully parameterized, FORCE TSA can output 5100 products! Each of these products are multi-band images.
    Some of these products, e.g. interpolated time series, can have 1000s of bands.
    Use with care!

  * Additional indices were implemented:
    
    * NDBI (normalized difference building index), 
    
    * NDWI (normalized difference water index), 
    
    * mNDWI (modified normalized difference water index), 
    
    * NDSI (normalized difference snow index)

  * A time series noise filtering was implemted, which can remove outliers on a per-pixel basis.
    Noise is estimated using the method described in Vermote et al.: https://doi.org/10.1109/TGRS.2008.2005977.
    Outliers are iteratively eliminated until the largest residual is smaller than ABOVE_NOISE.
    To further reduce commission errors of the cloud/cloud shadow masks, masked pixels that have a residual smaller than BELOW_NOISE are restored.

  * The DOYs and corresponding scoring function values in the Level 3 module are now given wih two parameters only, i.e. 
  
    +---------------------+-----------------------------+
    + Old                 + New                         +
    +=====================+=============================+
    + DOY_SCORE_0 = 120   +                             +
    +---------------------+                             +
    + DOY_SCORE_1 = 180   + DOY_SCORE = 120 180 240     +
    +---------------------+                             +
    + DOY_SCORE_2 = 240   +                             +
    +---------------------+-----------------------------+
    + DOY_STATIC_0 = 0.01 +                             +
    +---------------------+                             +
    + DOY_STATIC_1 = 0.99 + DOY_STATIC = 0.01 0.99 0.01 +
    +---------------------+                             +
    + DOY_STATIC_2 = 0.01 +                             +
    +---------------------+-----------------------------+

  * The LSP files for the phenology-adaptive compositing (PAC) in the Level 3 module are now given as basenames (instead of patterns), and are given with one parameter only:

    +-------------------------+------------------------------------------------+
    + Old                     + New                                            +
    +=========================+================================================+
    + LSP_PATTERN_PAR_0 = POS +                                                +
    +-------------------------+                                                +
    + LSP_PATTERN_PAR_1 = EOS + LSP_FILE = LSP-POS.tif LSP-EOS.tif LSP-MOS.tif +
    +-------------------------+                                                +
    + LSP_PATTERN_PAR_2 = MOS +                                                +
    +-------------------------+------------------------------------------------+

  * In version 2, there was an overlap between Spectral Temporal Metrics (a by-product of the compositing process) in the Level 3 module and basic statistics in the Time Series Analysis module.
    Those two concepts were merged, and are now available in the Time Series Analysis module as "Spectral Temporal Metrics" (STMs).
    Thus, the STMs are no longer sitting behind the compositing-specific quality filtering (which had both pros and cons).
    STMs can now be computed for any index requested, i.e. for any spectral band, and for each available index.
    STMs can be computed based on the regular time series, or based on the interpolated time series.
    The user can request a custom set of STMs, e.g. only average and standard deviation.
    Quantiles can be freely requested, e.g. the 37% quantile.
    In total, 107 STMs can be generated.

  * Several time series folds can now be computed within the same run.
    For each fold, trends or change+trends can be computed.
    A quarterly folding option was introduced.
    The available statistics to perform the folding have substantially increased:
    107 statistics can now be used (101 quantiles, range, IQR, mean, std, skewness, kurtosis).

  * Land Surface Phenology metrics can now be freely selected.
    Before, all 26 available metrics were output.
    The user can define an amplitude threshold (LSP_MIN_AMPLITUDE), which suppresses the computation of phenometrics for non-seasonal land covers.
    An index value threshold (LSP_MIN_VALUE) can be defined to suppresses the computation of phenometrics for unvegetated pixels.
    The user can set the amplitude threshold (LSP_AMP_THRESHOLD), which is used to determine Start and End of Season, defaults to 0.2.
    The spline fit can be output, too.
    For each requested metric, trends or change+trends can be computed.
    
  * In the Clear-Sky Observations (CSO) module, the statistics can now be freely chosen.
    Besides the number of observations, 107 statistics on the temporal distance between obaservations can be computed (101 quantiles, range, IQR, mean, std, skewness, kurtosis).

  * To reduce confusion, the ImproPhe module was renamed to "Continuous Field ImproPhe".
    The parameter file should now be enclosed by the tags "++PARAM_CFIMP_START++" and "++PARAM_CFIMP_END++" (instead of "++PARAM_IMP_START++" and "++PARAM_IMP_END++").
    The coarse resolution continuous fields (input), are now expected to be in datacube format.
    Before, the images were warped to the extent of the tiles.
    This was done to increase consistency within the higher level program, and to only need to rely on a single data input mechanism.
    For cubing the continuous fields, see the new program force-cube

  * In the Level 2 ImproPhe and Continuous Field ImproPhe modules, the prediction and texture kernel are now given as radius, before it was in diameter.

  * To reduce confusion, the parameter USE_IMPROPHE in the ARD-specific higher level modules was renamed to USE_L2_IMPROPHE to clarify that this relates to the output of the Level 2 ImproPhe module, i.e.
    spatially improved ARD datasets and not to the spatially improved continous field outputs as generated with the Continuous Field ImproPhe module.

  * A new module was added: the Machine Learning module.
    This module allows the application of machine learning models (e.g. trained with force-train, see new programs above) to predict a variable, e.g. classification or quantitative variable (fraction, biomass etc).
    Implemented are regression and classification flavors of Random Forest and Support Vector Machines (ML_METHOD).
    The features need to be given with the INPUT_FEATURE parameters, which can be given multiple times.
    The given features must correspond to the features that were used to train the model (e.g.
    force-train).
    The model(s) must be in OpenCV xml format, and must be stored in DIR_MODEL.
    Multiple models can be given, in which case the average (mode) of the predictions will be used for regression (classification).
    A convergence factor (ML_CONVERGENCE) can be specified for the regression.
    If the models converge, i.e. the average of the ensemble does not change when adding predictions from more models, no more predictions are added (saves time).
    This is done on the pixel-level, i.e. different pixels may be averaged using a different amount of predictions.
    The OUTPUT_MLI product provides the number of models used for each pixel.
    The OUTPUT_MLU model provides the standard deviation of the predictions used for each pixel.
    Multiple modelsets can be given, in which case multiple predictions are performed, e.g. a crop classification, land cover classification and tree species classififcation can be computed in the same run.
    The different predictions are stored as separate bands in the output file.
    A scaling factor (ML_SCALE) can be specified to scale to prediction to 16bit integers.

  * A new module was added: the Texture module.
    This module allows the computation of texture metrics.
    Currently implemented are morphological operators, i.e. open, close, erode, dilate, gradient, tophat and blackhat.
    The metrics can be computed on any feature provided with the INPUT_FEATURE parameters, which can be given multiple times.
    TXT_RADIUS defines the radius in projection units, and TXT_ITERATION defines the number of iterations the morphological opearionts are performed.

  * A new module was added: the Sampling module.
    This module takes a table with geographic coordinates and a response variable.
    Each feature provided with the INPUT_FEATURE parameters will be sampled, which can be given multiple times.
    The module outputs a file with the sampled features (FILE_SAMPLE), the corresponding response variable (FILE_RESPONSE), and the corresponding coordinates (FILE_COORDINATES).
    Note that the derived samples are not in the same order as the input table, as force-higher-level follows a tile/blockbased processing order.
    Points that are outside of the provided spatial extent are not sampled, too.
    The parameter FEATURE_EXCLUDE controls wheter a sample is taken if one of the features has a nodata value.
    The output of this file can serve as input for force-train to train machine learning modules.

  * A new module was added: the landscape metrics module (C) Franz Schug, franz.schug@geo.hu-berlin.de.
    This module allows for the computation of landscape metrics with a moving window strategy, as well as some focal statistics.
    The metrics can be computed on any feature provided with the INPUT_FEATURE parameters, which can be given multiple times.

