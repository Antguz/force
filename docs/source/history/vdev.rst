.. _vdev:

Develop version
===============

FORCE-dev
---------

Main release: TBA

* **General changes**

  * Makefile
    The check for the successful installation has been reworked.
    Thanks to Willi Weber for help on this topic.

* **FORCE L1AS**

  * Added nanoseconds to the temporary folder generated by force-level1-csd.
    This helps if the program is called from a parallel loop.
    Thanks to Pablo Rodríguez-Sánchez for suggesting this feature.
  
  * force-level1-csd is now aware of the FORCE_CREDENTIALS environment variable

* **FORCE L2PS**

  * new program: force-level2-report
    The new program allows to generate an html report of the Level 2 Processing.

  * fixed an inconsistency in the use of the ``MAX_CLOUD_COVER`` parameters.
    ``MAX_CLOUD_COVER_FRAME`` considered clouds and cloud shadows.
    ``MAX_CLOUD_COVER_TILE`` considered clouds, cloud shadows, and snow.
    The latter caused unexpected results, thus ``MAX_CLOUD_COVER_TILE`` now drops the snow evaluation.
    Thanks to Marco Wolsza for bringing up this issue.

* **FORCE HLPS**

  * in force-higher-level, TSA sub-module: 
    Fixed a coredump that occured when using ``OUTPUT_FB* = FALSE AND OUTPUT_CA* = TRUE``.
    Thanks to Matt Clark for reporting this issue.

  * A new submodule is available: ``UDF`` plug-in, enabled by a lot of support by Andreas Rabe.
    This submodule is an extension of the plug-in functionality introduced in v3.6.0.
    Python UDFs can now be simply plugged into FORCE, thus running custom Python code without re-compiling FORCE.
    The ``UDF`` submodule acts on the ARD input type (see :ref:`hl-input`).
    Two types of UDFs are supported:
    
    1) pixel-based UDF: the user only has to write a pixel-function, FORCE takes care of everything else.
    2) block-based UDF: the user has to write a function that receives a block of data. Useful for numpy-stype functions.

    A tutorial is planned to showcase the usage.

  * The usage of the previous UDF functionality within the ``TSA`` submodule was harmonized with the new ``UDF`` submodule.
    You will need to slightly adapt your existing UDF to work with the new version.
    Both UDF types are supported in the ``TSA`` submodule, too.

    A tutorial is planned to showcase the usage.
    
  * in force-higher-level, LSM sub-module: 
    
    Franz Schug added two new features. 
    1) The submodule now takes the minimum size of a patch to be considered for metrics calculation as a parameter; new parameter: ``LSM_MIN_PATCHSIZE``. 
    2) force-lsm now offers greater than or equal to (GE) and lower than or equal to (LE) as additional threshold definitions (``LSM_THRESHOLD_TYPE``).

* **FORCE AUX**

  * force-pyramid takes levels and resampling method as additional arguments.


#-- No changes yet, master is in sync with develop.
